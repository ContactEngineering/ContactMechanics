name: Tests

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mpi: ['yes', 'no']
        python-version: [3.7, 3.8, 3.9]
        mpi4py-version: [3.0.3]
        netcdf4-python-version: [1.5.7]

    steps:
    - uses: actions/checkout@v2

    - name: Set up python3 ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update -qy
        sudo apt-get install -y python3-dev python3-pip libfftw3-dev libopenblas-dev
        if [ "${{ matrix.mpi }}" == "yes" ]; then sudo apt-get install openmpi-bin libopenmpi-dev libfftw3-mpi-dev libhdf5-mpi-dev libpnetcdf-dev libnetcdf-pnetcdf-dev; fi
        if [ "${{ matrix.mpi }}" == "yes" ]; then CC=mpicc python3 -m pip install -v --force-reinstall --no-binary mpi4py mpi4py==${{ matrix.mpi4py-version }}; fi
        python3 -m pip install -r requirements.txt --no-binary setuptools_scm
        if [ "${{ matrix.mpi }}" == "yes" ]; then NETCDF4_DIR=/usr/lib/x86_64-linux-gnu/netcdf/pnetcdf CC=mpicc python3 -m pip install --force-reinstall -v --no-binary netCDF4 netCDF4==${{ matrix.netcdf4-python-version }}; fi
        python3 -m pip list

    - name: Build extension module
      run: |
        python3 setup.py sdist
        python3 -m pip install dist/*.tar.gz

    - name: Test with pytest
      run: |
        python3 .check_netcdf_capabilities.py ${{ matrix.mpi }}
        if [ "${{ matrix.mpi }}" == "yes" ]; then python3 run-tests.py --no-build --verbose --full-trace; else python3 -m pytest --flake8 --verbose --full-trace -s; fi

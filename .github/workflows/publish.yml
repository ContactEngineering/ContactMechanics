name: Publish source package and wheel

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update -qy
        sudo apt-get install -y python3 python3-pip python3-venv
        python3 -m venv ../venv
        source ../venv/bin/activate
        python3 -m pip install flit pip-tools
        # We need to install all dependencies before executing flit build,
        # because flit build loads the package to determine the version.
        pip-compile -q --resolver=backtracking pyproject.toml
        pip install -r requirements.txt
        rm requirements.txt

    - name: Build package
      run: |
        source ../venv/bin/activate
        flit --debug build

    - name: Build documentation
      run: |
        source ../venv/bin/activate
        python3 -m pip install sphinx sphinx_rtd_theme
        python3 -m pip install dist/*.whl
        cd docs
        sphinx-apidoc -o source/ ../ContactMechanics
        make html
        cd ..

    - name: Commit documentation changes
      run: |
        git clone https://github.com/ComputationalMechanics/ContactMechanics.git --branch gh-pages --single-branch gh-pages
        cp -r docs/_build/html/* gh-pages/
        cd gh-pages
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # the return code.

    - name: Push documentation changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
